import json
import time
import subprocess

peer_address = '02e4822973a4d2c47f527b5e38bc5ff83873ac7248bdf6a0d5f5aa951aeb331b73'

# Invoices increment by 100 starting at 10,000sats

invoices = ['lntb7100u1pjdynqxpp5ajp0angm47ag35rada8y48rya0arl7jfln5wr2l8c6722u3lyhrqdqqcqzzsxq9z0rgqsp54lk3fmg6f0gckyqnnyd7a6ct0h07xgnlqlfw0dycg5z0ee8jq46q9q8pqqqssqe4mly9p0stdux0r502p4gwgp6gwv6k5jv0drnsvm7xnuduc5jcg9kww63dhw23drjsyu7vwpxe5662ukr5mscpwfpss7xzq3yve4l6sqm760rl', 'lntb7200u1pjdynqxpp59zu5xfmxw6f4h9klmqjnnuwpv0w8qzn3tsx7wtxu59kx967p8lusdqqcqzzsxq9z0rgqsp58qru09hlcqlgpglf08nfl8f324mua3z4zr46rehpjgaahhze4gvq9q8pqqqssq9f78e8786hpqf9644wnmtmwerpsjy644y2aqu2p7wpz7nsxragpj89tj73kenyfjstrrdxgtx6vwnhyr6vtccvn3z4vzdhm69tnd0mcp9nlhs8', 'lntb7300u1pjdynqxpp5rw9vntq0up6x9tgysw3lyuncg302ll7r3c59z9pkr0shrn3lwatsdqqcqzzsxq9z0rgqsp5sgvry8klrwxwtkctm6j2xfqj7au7sdsp2dydfzyunax74k35t85s9q8pqqqssq2jm0dl2422gezm7rlkc3qpvgxyvg4jxr8wvtc0e83l2mvsmfg7z5m8yrr0smhcgmkpgr3cwaenl52aqqak9j6spc0qztzxggk4wn8dqq8pdvey', 'lntb7400u1pjdynqxpp5dr03dh5r679eu9jrrnkurj697dvtr6dhlkk3akutpgum2qr2he6sdqqcqzzsxq9z0rgqsp5t5zycyj9ne32ntnc4d8zm77n6eh0chvadtvaqcsn9phl04mvhsys9q8pqqqssqkcwy5fvcvw3d940ljhwnrmtp6dkvwnyv0ken8cl856xvk72pyzw9rzlnnr2g743eca0hmy4kf3gcqfa4f2z2gl6rssqcfut943g74xqp72xesu', 'lntb7500u1pjdynqxpp5gm00jrucgfj4eyrp4fqcqq7ukl2cq8ydeav79u54x39j9znt96zsdqqcqzzsxq9z0rgqsp5qvd2hmna7a4ev39wprg59drqr7t5g6zxy2lwztx4g2hjxkec87ls9q8pqqqssqj8cxrzjcqfpn6jtr0qkwz23afjt09ss4kuyhr6dq9mcel6td27e9uysq659rfrjn9yzs3pyw0h5pqwedhc3tuhadvd478ln674dz74spy29cyd', 'lntb7600u1pjdynqxpp5h8l7584cdqqrzuutmcxtu2l34h7sd66llk8gqdcv44vdw23jm6xsdqqcqzzsxq9z0rgqsp5c5kat6kpr7973rm9xeucnm93d3x23dzvczqmm0atga8f3t9nmekq9q8pqqqssq5a9xw90u08uv9zkh8plwavp3wa6gqjpa6kczy8rrrztayktqslprncj3tzv9aqletwue4d6a6hjn366cxwslhdek9qtd4m6npw5jveqqe6fup4', 'lntb7700u1pjdynqxpp558rk90476w09268cr0h7n6rukeeel3vdhkz2esuvftwy6r20c75qdqqcqzzsxq9z0rgqsp53dtxyhcsg7lll964v74rszm0k4w2kzlkt5ezy6q7qar7zngdvqqs9q8pqqqssq6cr4daqxugag9l0jqk6f6v2l26g9l7wphwv4cvq7wfhhyfjthswxne49d47smpm56jrf7rs3k6t90uksmk99fpkuc54kh587v3n253spkpjtch', 'lntb7800u1pjdynqxpp5gnqcjrf6fzw2nr43mcr8ms4wss2zfggwgq0ett99uztd8e8k4nqqdqqcqzzsxq9z0rgqsp5dhsxwmtnvl38u3jpsdevmj93ckvvmgecpzxgw7jmqae0lcuwa7vs9q8pqqqssqwggfy09xss42yxck8m4ap77xzrrec9tur9zejqmnpky6z0acsgvsdk56zpjy0zgdfr4vzv0dtdp6454ydzdkhzyuzwe65h5t05hy87cqcrpcnh', 'lntb7900u1pjdynqxpp56xl0wzmaj06t7wcfjw8xz5n8ksjvj98ahgd4f26eh6lkuq098y6qdqqcqzzsxq9z0rgqsp5xqfdyqkyfqpufydqes4zka8cgh304aldjk7zwt6skd675qdvvwzs9q8pqqqssqyze6h6an0v09zuu4cxm62kzt8d654acy66f0a8sk0tze3hxk79jka0ryk3pnnrsw4xy53yx33qgv59qzkqfagcadn3875qz6h9dfj8gpjc8l62', 'lntb8m1pjdynqxpp5s2jna7tkdhu8v6uyzav9sjhhrmx0u8ur0tj6jja70q70y4huen6qdqqcqzzsxq9z0rgqsp5zvcxvqnj7afw3yyyyzucc6c7lnrjz44qf4af0anzq85lt8mum0gq9q8pqqqssqxe3vcmq3g56zrp0p027wj0gxg4yrsg6mugastuf82u6l3plflx53mcp3xqun8exu0ym3efqg4ul69k3e2zagkp25gy9s67ema63adhgp2z44cp', 'lntb8100u1pjdynqxpp50h8l5eha6zt4xr2c4zy7jwu66swywzv9vdcvvfetu2l42teuh3esdqqcqzzsxq9z0rgqsp59tuq0ppuqagdzwmcxl8wqa0wlspwaf59envd9dh3jdsmf9ct828s9q8pqqqssqv8nrh42sn3gjva42q5n2l87pd5lyq36ec6xm4l33tan89zz56pzqm2dz3mhzce0rdzlv32hn9lr6md92k29q6g2lhx7xzh26v598z8cpeewfdv', 'lntb8200u1pjdynqxpp5pxvjf0kqquwvctm28ldwee9dvqppz3ctgnewh0a9vc4q77e7zywsdqqcqzzsxq9z0rgqsp5jz00wa3zc64ldn7jsefh9q8794aqx8whvayecnm8cetwsu94swws9q8pqqqssqpfq6twvphjk30rg6lh0ecelvvlg9fhw8lzx46gyygu7p6jcz9tnqa3gydhslznl2nc7cpaqcemxdlc9t7rp0ppsrz2c7uqw6z92zsxsq89ped6', 'lntb8300u1pjdynqxpp5nv2yuyj43qrqt7fqhqartmjmj0t2lrn73tafmft7lxhpwnfneggqdqqcqzzsxq9z0rgqsp5zns7s5uenkvz845zxsc9ht9dk9f2rfd55lfas03cef8q53dxdd0s9q8pqqqssq9ec6a77vmdwfpm3ls8pqvepvhgtva7cz2w5xk5q9x0l9twasv7xkjcqxuazwkzkmfpfnfv2qa28dh9ns4ar878au0r2tskmvzy3ae2spvlcw26', 'lntb8400u1pjdynqxpp5cm3ssh44v2ay6ndrtcjnwru2x6uq7uafkwp2x57jwvaslqqx8ykqdqqcqzzsxq9z0rgqsp5k6nu9e3qjkjl94dzuxkklhxk9nuyrhf3kugdsy8ety0mnqcf2jhq9q8pqqqssqa7lcz7mn6w98r59u9cayg3n7446smxxdgjptxufctnfeh3yakt988u55f3htfd96pyp397md4jmghdvzzcsu04slxam7adztrztpfqsppxcgjq', 'lntb8500u1pjdynqxpp595wfza0mx6ue0ftxch2uuj83xexyksftpfv706pu884wapextwxsdqqcqzzsxq9z0rgqsp56rkxl0f0tgkm0y4acjcupra83jr9k9dmphv2reqexrmw6d42kkuq9q8pqqqssqfx3r99lz822ks22dkztt3yqgy8hns4kd98su85shyvha07tuk3xyjt2dtka5v74763qp3mxnwutff9qea0kmj6tc94k438vr05m92sgq6z4se6', 'lntb8600u1pjdynqxpp5xy9n9aphpptfss5pvduhtgatzrrqtepyrqj9vp62jmh652c3mzlqdqqcqzzsxq9z0rgqsp5f6d609g0jamc955zqjhxaxyuupwgr3ssxn2hvlted34mpjjsfrms9q8pqqqssqwg7m2gfkcdde2j4exegc43f3dykv60tqeu5zsg0207vp8z9x5fzxlcdauv86rwewrrhj2e6y8sk07wf3l49kyapzmfsfppzn3m6dh6gq8akfz5', 'lntb8700u1pjdynqxpp5wn0u074cc98qme3ye7nh2j2phclkvlag0m50lrj6r2pze3flf8usdqqcqzzsxq9z0rgqsp5kcy2wr3rdvj9ysm9luweqqmpqvwqhpwv29wj5hjpcqzldq7d3fls9q8pqqqssq55a3ppt900dq7r9xvk50jf6457r92w5gamqx26pktk4ycp9hsu5h6kvk6rjqz4dtwugv4gfg5elhk4lvwmvesptcum2us5y4xfr9tqcq0v9xw6', 'lntb8800u1pjdynqxpp5t5lhhzex6etqep4p2jtpfntufzh98xkh9jc8c5sa9v0lu38e0ahsdqqcqzzsxq9z0rgqsp5mc7t60d3a7rtfl65g46ql0vcp6m6fpmrfzpsrq3c5z48azwm3gxq9q8pqqqssq57u5zjm9lae8zk7cfcfmayzkkfj0hvnj0jclm4hgu74l8lmw9733uu7gz5dwd94gdyeqh0dan7rwglhg9lem7eu29z8nqfusqwcky4spyj6xy4', 'lntb8900u1pjdynqxpp5wfrf8len4ff7dmlcgfspv5lwp5gs7299mc773sve6u7te6a05f2sdqqcqzzsxq9z0rgqsp5lfhcuku9ns2g676mq4hhuup2xmvcwfn68kjz0uvx8fk2cz9klhaq9q8pqqqssq0z8jg4c7mje59zmhk7ytakydtkvl7xle7dnrerlk9jvxhu8egdrs93a2yvm2ya7v28tu8pxtz8jug33vag6j3e5ajtl5cnla8dqmfqqpww5naa', 'lntb9m1pjdynqxpp5p2xjyjm9u7u53au6qjfa33nxjxc0pyapyx3z4h46nmm6pwf26ddsdqqcqzzsxq9z0rgqsp57xym3u378z7ss6tcapec98repfw8futfc4eq4mqx62umt0cqq2xs9q8pqqqssqys8e8qne4jj4x4qyrdmye5p4yml9sk2069pafvk6nqfqczj66ncxhm7x0z7l5duafg5nvxjpa37uhs0psgfs0x2kpjt5eltf25kdkuqpgtwa5z', 'lntb9100u1pjdynq8pp544k3wqunugquan4697k2n2zuqnn9wnh0galcurgptjhlchrs0nksdqqcqzzsxq9z0rgqsp5s20fxp5sysk6hcwj903fdcu3y9ag94ez0fqmyy8pzalyg84qu9rq9q8pqqqssqt0dr40twhvh56cqu4pq0sqy775jg5zk8wrxckjhsp48r6f8l6k63rmyf0whmu22vphgfj7vc3mmtad2t8ffptys0rxqeqw2zfvtaazqq65hfue', 'lntb9200u1pjdynq8pp5trhqz4slf4zssv78hwvkmaal8rza0ex3r4e47t5e89m204d8wjaqdqqcqzzsxq9z0rgqsp5w77ghmr9avgkgdxv3dmpz6ccwzuujw8ee4fw2c57navtjklfzuvs9q8pqqqssq65nczap7w6yl8avwm945add5l0k7fcw5nysa4ns4kecselqhnxmj2fpv5y0rzgxzq9497ygp8en4uyctgwjp33cmdj9st49wp44nhksps0wp7d', 'lntb9300u1pjdynq8pp5r7kkxal53s8uhxaqx9vryu0fjdvs59cdf3t9h5x56zq80gl59jsqdqqcqzzsxq9z0rgqsp53qj4fmjmnznf6gh34zcdxnv4m3tzwvum3v9y0kkvd8a34amk3ekq9q8pqqqssq73mqtsd2rzshd7y5j59d8w2ag8l7pqq0r3n3y6y46mp3xcggus3qcgj8ve23f4n2f57g707thqnwyj9s9cwfmeewul2xmupmk0pdencqkwksdk', 'lntb9400u1pjdynq8pp5fyxkf8czccdxpk9wpe2kzrqy3c0tj83vhgjyxectd55e0sgr7qnqdqqcqzzsxq9z0rgqsp575jdnwwqjjvuvdqhdwspxk43xsaysf8fh54ac2emglyuskzr2tlq9q8pqqqssqj0kz68asekkux72rdsyw6tvqn9k4ztgwc3jfxrzjk36phjvc2cyx9epzjk2cfnt0m870h3v297ncc63rzwr58llvtwpmg08rj03qacsqrx3azm', 'lntb9500u1pjdynq8pp5a6mecaw0npz0264y9dyakh8dn634anxaujp7kf99fkfczv08vkusdqqcqzzsxq9z0rgqsp53aav3an4lsx7e87qx9y7uy3g6y2adweq082w9dp9gew5272pu34q9q8pqqqssqskry3fh7v60lqdppcgp9ayqt2k83grwmk6wv6rz0h5r8l5md8dkn6m74yp8u8j8xddnjhfpfcmxr26hmtdpu3qcrdmf6srjexvwz7dgq2p5whu', 'lntb9600u1pjdynq8pp5ht02k0x68apmu5lrn6n94ezh28w264m3nhlltmpj60q2eqtswtdsdqqcqzzsxq9z0rgqsp55facp4dclyguypuahs2zzs5dgq0yg4te3lp9v4raxfg0p8exdh7s9q8pqqqssq3fa4wtjdj55j5fy82n3f20nyz2txkc0dm9z3dteyzy0rl8pk3frj0tkr437k6tdjxcwv9w4unj4ljhjqm2fw5nlt3px3dps0mm82a2sqhq5jwy', 'lntb9700u1pjdynq8pp58eyp7k0audr40vazrafnxx28yklxphfh7kyk9adrvrhdflremhhqdqqcqzzsxq9z0rgqsp5ywz9n40ky53yc54sn65nq27edujjlvsd8jcfl8va0fpx5f348r2q9q8pqqqssq9mpf9w43ptxu69yr7qeeju8gnl5nywenkz8sf8xk7enzv8htkumn65txpxwkvlvxu74jrwmladqkhdx4ls7zv9nh96xnck9mh29ghjsqewdtp3', 'lntb9800u1pjdynq8pp5qr6rlp6xmygt6a7nh6dh39eg7dls6r8vm07p08asgs50k8g9p0tsdqqcqzzsxq9z0rgqsp5g702zw5nvlc9c9kyrnnez0fdc8nyfkeqfwd8av0xnq9d38gjck0q9q8pqqqssqg7sudug9fx9qk8vsdt0vw6xyzdc6y6gue8wvg90eq9vmkne849kykhflee2myphud5az9e2zslek6s93f3sxy66tdaff899dcn2xn7gqsf8zva', 'lntb9900u1pjdynq8pp5ej7500n6l2yfvzgda5sth4kjt0uftjgdju4aefzada2nmfuund8sdqqcqzzsxq9z0rgqsp5qsn4lespuvym8pu37223kuk7kav35pxpnl8hyw5nwx4heyhlrc5s9q8pqqqssqt73sl9lhmv6vq4kgfxr7wnghr9kzxlpmejf5lvj77xqe9t0vhk0n6h79es4rd9erqcxwp2uych5x6x88nrfc8pfx664pc02226j6g2gpvplqs0']
invoice_amount = 710000
invoice_increment = 10000

num_channels = 10
channel_cap = 200000

for pay_request in invoices:
  result = subprocess.run(['lncli', '-n', 'testnet', 'walletbalance'], stdout=subprocess.PIPE, stderr=subprocess.PIPE)
  output = result.stdout.decode('utf-8')

  if int(json.loads(output)['confirmed_balance']) < 2*invoice_amount:
    break

  print("Opening Channels:")
  print("")
  for i in range(0, num_channels):
    print("Generating channel {} of amount: 200000".format(i+1))
    result = subprocess.run(['lncli','-n', 'testnet', 'openchannel', peer_address, str(channel_cap), '--min_confs', '0'], stdout=subprocess.PIPE, stderr=subprocess.PIPE)
    output = result.stdout.decode('utf-8')
    print(output)

  print("")
  print("Waiting for channels to open..")
  print("")
  while(1):
    result = subprocess.run(['lncli', '-n', 'testnet', 'pendingchannels'], stdout=subprocess.PIPE, stderr=subprocess.PIPE)
    output = result.stdout.decode('utf-8')
    num_pending_channels = len(json.loads(output)['pending_open_channels'])
    if num_pending_channels == 0:
      print("Channels have opened.")
      break

  print("")
  print("Paying Invoice:")
  start_time = time.time()
  result = subprocess.Popen(['lncli','-n', 'testnet', 'payinvoice', pay_request], stdout=subprocess.PIPE, stderr=subprocess.PIPE, stdin=subprocess.PIPE)
  result.stdin.write(b'yes\n')
  output, error = result.communicate()
  result.stdin.close()
  print(output.decode('ascii'))
  print(error.decode('ascii'))

  if "SUCCEEDED" not in output.decode('ascii'):
    print("Payment Error.")
    break

  file = open('data/transaction_vs_time_fulfill.txt', 'a')
  file.write('{};{}\n'.format(invoice_amount, time.time()-start_time))
  file.close()
  print("Payment Success.")


  print("")
  print("Closing all open channels...")
  result = subprocess.run(['lncli','-n', 'testnet', 'closeallchannels'], stdout=subprocess.PIPE, stderr=subprocess.PIPE)

  while(1):
    result = subprocess.run(['lncli', '-n', 'testnet', 'pendingchannels'], stdout=subprocess.PIPE, stderr=subprocess.PIPE)
    output = result.stdout.decode('utf-8')
    num_pending_channels = len(json.loads(output)['waiting_close_channels'])
    if num_pending_channels == 0:
      print("Channels have closed.")
      break

  invoice_amount += invoice_increment

